plugins {
    id 'com.android.application'
    id "com.google.protobuf" version '0.9.0'
    id 'org.jetbrains.kotlin.android'
}

def osName = System.getProperty("os.name").toLowerCase()
def osArch = System.getProperty("os.arch")

if (osName.contains("mac") && osArch.equals("aarch64")) {
    project.ext.osArch = "osx-x86_64"

} else {
    project.ext.osArch = ""
}

android {
    buildFeatures {
        compose = true
        buildConfig = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.15"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    compileSdk 34

    defaultConfig {
        applicationId "net.discdd.bundleclient"
        minSdk 33 // Required at least 34 for JDK 17 -> enable BufferedInputStream transferTo in BundleCore
        targetSdk 34
        versionCode rootProject.ext.appVersionCode as Integer
        versionName rootProject.ext.appVersionName as String
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug { minifyEnabled false }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    namespace 'net.discdd.bundleclient'
    lint {
        abortOnError false
        disable 'GoogleAppIndexingWarning', 'HardcodedText'
        textOutput file('stdout')
        textReport true
    }
    packagingOptions {
        jniLibs {
            excludes += ['META-INF/*', 'META-INF/*/*', 'LICENSE-BouncyCastle', 'META-INF/versions/9/OSGI-INF/MANIFEST.MF']
        }
        resources {
            excludes += ['META-INF/*', 'META-INF/*/*', 'LICENSE-BouncyCastle','META-INF/versions/9/OSGI-INF/MANIFEST.MF']
        }
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }
}

dependencies {
    implementation project(':android-core')
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.test:core:1.6.1'
    implementation 'androidx.test.ext:junit:1.2.1'
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+

    def work_version = "2.7.0"
    implementation "androidx.work:work-runtime:$work_version"

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.3.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // DDD common core
    implementation 'net.discdd:bundle-core:0.0.2'
    implementation 'org.conscrypt:conscrypt-android:2.5.3'
    implementation 'com.google.code.gson:gson:2.8.7'
    implementation group: 'commons-io', name: 'commons-io', version: '2.4'
    implementation 'org.apache.commons:commons-text:1.9'
    //JSON
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.8.9'
    implementation 'com.google.guava:guava:30.1.1-jre'

    //UITesting
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.6.1'
    androidTestImplementation 'org.mockito:mockito-android:5.5.0'
    androidTestImplementation project(':client-adapter')

    testImplementation 'junit:junit:4.13.2'

    //dependencies for ACRA

    //version
    def acraVersion = '5.12.0'
    //custom sender (custom destination)
    implementation "ch.acra:acra-core:$acraVersion"
    //here's where we could add dialog interaction (user notification and description of crash)
    //annotation to load sender onto acra config
    annotationProcessor("com.google.auto.service:auto-service:1.1.1")
    compileOnly("com.google.auto.service:auto-service-annotations:1.1.1")

    // Compose migration
    var composeBom = platform("androidx.compose:compose-bom:2025.02.00")
    implementation(composeBom)
    androidTestImplementation(composeBom)
    implementation("androidx.compose.material3:material3")
    implementation("androidx.compose.ui:ui-tooling-preview")
    debugImplementation("androidx.compose.ui:ui-tooling")
    implementation("androidx.activity:activity-compose:1.9.0")
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.8.7")
    implementation("androidx.compose.runtime:runtime-livedata")
    implementation("com.google.accompanist:accompanist-permissions:0.37.2")
}
