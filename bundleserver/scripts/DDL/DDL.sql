USE DTN_SERVER_DB;

SHOW TABLES;

-- RECEIVE FLOW TABLES 
CREATE TABLE LARGEST_ADU_ID_RECEIVED (
	id VARCHAR(36),
	CLIENT_ID VARCHAR(100) NOT NULL,
    APP_ID varchar(100) NOT NULL,
    ADU_ID INT UNSIGNED NOT NULL,
    PRIMARY KEY(id)
);

CREATE TABLE LARGEST_ADU_ID_DELIVERED (
	ID VARCHAR(36),
	CLIENT_ID VARCHAR(100) NOT NULL,
    APP_ID varchar(100) NOT NULL,
    ADU_ID INT UNSIGNED NOT NULL,
    PRIMARY KEY(id)
);

CREATE TABLE LARGEST_BUNDLE_ID_RECEIVED (
	CLIENT_ID VARCHAR(100),
    BUNDLE_ID VARCHAR(100) NOT NULL,
    PRIMARY KEY(CLIENT_ID)
);

-- SEND FLOW TABLES
CREATE TABLE LAST_BUNDLE_ID_SENT (
	CLIENT_ID VARCHAR(100),
    BUNDLE_ID VARCHAR(100) NOT NULL,
    PRIMARY KEY(CLIENT_ID)
);

CREATE TABLE SENT_BUNDLE_DETAILS (
    BUNDLE_ID VARCHAR(100),
    CLIENT_ID VARCHAR(100),
    ACKED_BUNDLE_ID VARCHAR(100) NOT NULL,
    PRIMARY KEY(BUNDLE_ID)
);

CREATE TABLE SENT_ADU_DETAILS (
	ID VARCHAR(36),
    BUNDLE_ID VARCHAR(100) NOT NULL,
    APP_ID VARCHAR(100) NOT NULL,
    ADU_ID_RANGE_START INT UNSIGNED NOT NULL,
    ADU_ID_RANGE_END INT UNSIGNED NOT NULL,
    PRIMARY KEY(ID),
    CONSTRAINT fk_sent_bundle_details
    FOREIGN KEY (BUNDLE_ID) 
        REFERENCES SENT_BUNDLE_DETAILS(BUNDLE_ID)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);

DROP TABLE LARGEST_ADU_ID_RECEIVED;
DROP TABLE LARGEST_ADU_ID_DELIVERED;
DROP TABLE LARGEST_BUNDLE_ID_RECEIVED;


DROP TABLE SENT_ADU_DETAILS;
DROP TABLE SENT_BUNDLE_DETAILS;

INSERT INTO LARGEST_BUNDLE_ID_RECEIVED VALUES('client0', 'client0-0');

SELECT CLIENT_ID, BUNDLE_ID FROM LARGEST_BUNDLE_ID_RECEIVED;

DELETE FROM LARGEST_BUNDLE_ID_RECEIVED WHERE client_id = 'client0';
DELETE FROM LARGEST_ADU_ID_RECEIVED WHERE id = '6728e987-5bbd-49bf-9080-be7339b8dcd8';
commit;


select * from largest_adu_id_received;
SELECT CLIENT_ID, BUNDLE_ID FROM LARGEST_BUNDLE_ID_RECEIVED;
SELECT *  FROM LARGEST_ADU_ID_RECEIVED;
SELECT *  FROM LARGEST_ADU_ID_DELIVERED;
select * from last_bundle_id_sent;
select * from sent_bundle_details;
select * from sent_adu_details;
select * from largest_bundle_id_received;

SET SQL_SAFE_UPDATES = 0;
DELETE from largest_adu_id_received;
DELETE FROM LARGEST_BUNDLE_ID_RECEIVED;
DELETE FROM LARGEST_ADU_ID_RECEIVED;
DELETE FROM LARGEST_ADU_ID_DELIVERED;
DELETE from last_bundle_id_sent;
DELETE from sent_bundle_details;
DELETE from sent_adu_details;
DELETE from largest_bundle_id_received;
commit;

