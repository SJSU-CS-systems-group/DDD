USE DTN_SERVER_DB;

-- RECEIVE FLOW TABLES 
CREATE TABLE LARGEST_ADU_ID_RECEIVED (
	id VARCHAR(36),
	CLIENT_ID VARCHAR(100) NOT NULL,
    APP_ID varchar(100) NOT NULL,
    ADU_ID INT UNSIGNED NOT NULL,
    PRIMARY KEY(id)
);

CREATE TABLE LARGEST_ADU_ID_DELIVERED (
	ID VARCHAR(36),
	CLIENT_ID VARCHAR(100) NOT NULL,
    APP_ID varchar(100) NOT NULL,
    ADU_ID INT UNSIGNED NOT NULL,
    PRIMARY KEY(id)
);

CREATE TABLE LARGEST_BUNDLE_ID_RECEIVED (
	CLIENT_ID VARCHAR(100),
    BUNDLE_ID VARCHAR(100) NOT NULL,
    PRIMARY KEY(CLIENT_ID)
);

-- SEND FLOW TABLES
CREATE TABLE LAST_BUNDLE_ID_SENT (
	CLIENT_ID VARCHAR(100),
    BUNDLE_ID VARCHAR(100) NOT NULL,
    PRIMARY KEY(CLIENT_ID)
);

CREATE TABLE SENT_BUNDLE_DETAILS (
    BUNDLE_ID VARCHAR(100),
    CLIENT_ID VARCHAR(100),
    ACKED_BUNDLE_ID VARCHAR(100) NOT NULL,
    PRIMARY KEY(BUNDLE_ID)
);

CREATE TABLE SENT_ADU_DETAILS (
	ID VARCHAR(36),
    BUNDLE_ID VARCHAR(100) NOT NULL,
    APP_ID VARCHAR(100) NOT NULL,
    ADU_ID_RANGE_START INT UNSIGNED NOT NULL,
    ADU_ID_RANGE_END INT UNSIGNED NOT NULL,
    PRIMARY KEY(ID),
    CONSTRAINT fk_sent_bundle_details
    FOREIGN KEY (BUNDLE_ID) 
        REFERENCES SENT_BUNDLE_DETAILS(BUNDLE_ID)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);